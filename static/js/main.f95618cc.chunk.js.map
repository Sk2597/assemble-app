{"version":3,"sources":["components/HomePage.js","components/SelectParts.js","components/ListItemCustom.js","components/Column.js","components/Assemble.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","media","height","paddingTop","buttonRight","marginTop","spacing","marginBottom","marginLeft","HomePage","classes","style","padding","Typography","component","backgroundColor","Card","className","variant","CardHeader","title","CardMedia","image","CardContent","color","CardActions","disableSpacing","to","Button","gridList","flexWrap","transform","width","marginRight","submitButton","SelectParts","selectedPartNames","selectedParts","selectAllCheckbox","useState","partState","setPartState","useEffect","id","name","selected","disableCheckbox","map","d","handleCheckboxDisable","forEach","t","index","indexOf","push","splice","length","Checkbox","label","onChange","e","checked","target","GridList","cellHeight","cols","part","i","GridListTile","src","alt","GridListTileBar","actionIcon","inputProps","event","data","disabled","onClick","localStorage","setItem","JSON","stringify","minWidth","minHeight","ListItemCustom","itemObject","draggableId","provided","ListItem","ContainerComponent","ContainerProps","ref","innerRef","draggableProps","dragHandleProps","display","ListItemSecondaryAction","IconButton","edge","aria-label","question-uid","Column","column","droppableId","RootRef","rootRef","List","list","placeholder","Assemble","parts","parse","getItem","element","initialColumns","combine","columns","setColumns","onDragEnd","source","destination","undefined","start","end","newList","filter","_","idx","newCol","state","newStartList","newStartCol","newEndList","newEndCol","Grid","container","direction","justify","Object","values","item","xs","App","exact","path","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f95618cc.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Link } from \"react-router-dom\";\n// import DraggableComponent from './DraggableComponent';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    margin: 'auto'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  buttonRight:{\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(15),\n  },\n}));\n\n\nconst HomePage = () => {\n    const classes = useStyles();\n    return (\n        <div style = {{padding: '5%'}}>\n              {/* <CssBaseline /> */}\n              <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }}>\n              <div style = {{}}>\n              <Card className={classes.root} variant=\"outlined\">\n                <CardHeader\n                    title=\"Assemble\"\n                />\n                <CardMedia\n                    className={classes.media}\n                    image=\"/static/images/car.jpeg\"\n                    title=\"Car\"\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    On the next screen the above image has been divide into 6 equal parts! Select the parts and assemble back as shown.\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                <div className={classes.buttonRight} >  \n                <Link to=\"/stepsToAssemble\">\n                    <Button variant=\"contained\" color=\"primary\">\n                        Start\n                    </Button>\n                </Link>\n                </div>  \n                </CardActions>\n                </Card>\n            </div>\n\n              </Typography>\n\n        </div>\n    )\n}\n\nexport default HomePage\n\n\n/* <Link to=\"/add\">\n<button\n  type=\"button\"\n  className=\"btn btn-primary btn-sm float-right my-3\"\n>\n  Add\n</button>\n</Link> */\n","    import React, { useState, useEffect } from 'react';\n    import { makeStyles } from '@material-ui/core/styles';\n    import GridList from '@material-ui/core/GridList';\n    import GridListTile from '@material-ui/core/GridListTile';\n    import GridListTileBar from '@material-ui/core/GridListTileBar';\n    import Checkbox from '@material-ui/core/Checkbox';\n    import { Typography } from '@material-ui/core';\n    // import { purple } from '@material-ui/core/colors';\n    import Button from '@material-ui/core/Button';\n    import { Link } from \"react-router-dom\";\n\n    const useStyles = makeStyles((theme) => ({\n        // root: {\n        //     display: 'flex',\n        //     flexWrap: 'wrap',\n        //     justifyContent: 'space-around',\n        //     overflow: 'hidden',\n        //     backgroundColor: theme.palette.background.paper,\n        //   },\n        gridList: {\n            flexWrap: 'nowrap',\n            transform: 'translateZ(0)',\n        },\n        \n        image: {\n            height: \"80%\",\n            width: \"90%\",\n            marginRight: \"20%\"\n        },\n        submitButton: {\n            marginTop: theme.spacing(5),\n            marginBottom: theme.spacing(3),\n        },\n        }));\n\n    const SelectParts = () => { \n    let selectedPartNames = []\n    let selectedParts = []\n    let selectAllCheckbox = false\n\n    const classes = useStyles();\n    const [partState, setPartState] = useState([]);\n\n    useEffect(() => {\n        let partState = [\n            {id: \"1\",name: 'LeftWheel', selected: false, image:'static/images/LeftWheel.jpg', disableCheckbox: false},\n            {id: \"2\",name: 'Trunk', selected: false, image:'static/images/Trunk.jpg', disableCheckbox: false},\n            {id: \"3\",name: 'RightWheel', selected: false, image:'static/images/RightWheel.jpg', disableCheckbox: false},\n            {id: \"4\",name: 'Roof', selected: false, image:'static/images/Roof.jpg', disableCheckbox: false},\n            {id: \"5\",name: 'Hood', selected: false, image:'static/images/Hood.jpg', disableCheckbox: false},\n            {id: \"6\",name: 'Floor', selected: false, image:'static/images/Floor.jpg', disableCheckbox: false},\n        ]\n\n        setPartState(\n        partState.map(d => {\n            return {\n            id: d.id,\n            selected: false,\n            name: d.name,\n            image: d.image,\n            disableCheckbox: d.disableCheckbox\n            };\n        })\n        );\n    }, []);\n\n    const submit = () => {\n        //   console.log('submit called')\n        localStorage.setItem(\"selectedParts\", JSON.stringify(partState));\n    }\n\n    const handleCheckboxDisable = () => {\n    // selectAllCheckbox =  partState!= null && partState.every(t => t.selected)\n    //     console.log('selectAllCheckbox',selectAllCheckbox)\n    if(partState)\n    partState.forEach(t => {\n        let index = selectedPartNames.indexOf(t.name);\n        // console.log('index for name',index,t.name)\n        // console.log('t.selected and name',t.selected,t.name)\n        if(t.selected&&index===-1){\n            // val not found, pushing onto array\n            selectedPartNames.push(t.name);\n            selectedParts.push(t);\n            // console.log(\"if selected parts names\", selectedPartNames)\n        //   console.log(\"if selected parts\", selectedParts)\n        } \n\n        else if(!t.selected&&index!==-1){\n        // val is found, removing from array\n        selectedPartNames.splice(index,1);\n        selectedParts.splice(index,1);\n        // console.log(\"else selected part names\", selectedPartNames)\n        // console.log(\"else selected parts\", selectedParts)\n        }\n        }\n    )\n    // console.log(\"final selected parts\", selectedParts)\n    // console.log(\"partState\", partState)\n\n    if(selectedPartNames.length>=3&&!selectAllCheckbox){\n        partState.forEach(t => {\n            if(t.selected !== true){\n                t.disableCheckbox = true\n            }\n\n        })\n    }\n\n    if(selectedPartNames.length<3&&!selectAllCheckbox){\n        partState.forEach(t => {\n           t.disableCheckbox = selectAllCheckbox\n        })\n    }\n\n    // pushElement(partState);\n    }\n\n        // const handleCheckboxDisable = () => {\n        \n        // }\n\n    return (\n        <div style = {{padding: '5%'}}>\n            <span>\n            <Typography variant=\"h6\">Select All</Typography>\n            <Checkbox\n                name=\"allSelected\"\n                color=\"primary\"\n                label=\"Start\"\n                onChange={e => {\n                    let checked = e.target.checked;\n                    setPartState(\n                    partState.map(d => {\n                        selectAllCheckbox = checked;\n                        d.selected = checked;\n                        // console.log('all name selected', d.name,d.selected)\n                        // console.log(\"partState\", partState)\n                        handleCheckboxDisable();\n                        return d;\n                    })\n                    );\n                }}\n            />\n            </span>\n            \n            <GridList cellHeight={300} className={classes.gridList} cols={4.5}>\n                {partState.map((part,i) => (\n                <GridListTile key={part.name}>\n                    <img src={part.image} alt={part.name} className={classes.image} />\n                <GridListTileBar\n                title={part.name}\n                actionIcon={\n                    <div>\n                    <Checkbox\n                    color=\"primary\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    onChange={event => {\n                        let checked = event.target.checked;\n                        setPartState(\n                        partState.map(data => {\n                            if (part.name === data.name) {\n                            data.selected = checked;\n                            // console.log('single name,selected',data.name,data.selected)\n                            // console.log('parts selected', partState)\n                            handleCheckboxDisable();\n                            \n                            }\n                            return data;\n                        })\n                        );\n                    }}\n                    checked = {part.selected}\n                    disabled = {part.disableCheckbox}\n                />\n                </div>\n                }\n                />\n                </GridListTile>\n                ))}\n            </GridList> \n\n            <div>\n                <div className={classes.submitButton}></div>\n                <div>\n                <Link to=\"/assemble\">\n                <Button variant=\"contained\" color=\"primary\" onClick={submit}>\n                            Submit\n                    </Button>\n                </Link>\n                \n                </div>\n            </div>\n            \n        \n        </div>\n    );\n    }\n\n    export default SelectParts\n\n\n\n\n\n\n\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\n// import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\n// import { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      minWidth: 220,\n      minHeight: 220,\n      maxWidth: 345,\n      margin: 'auto',\n    },\n    media: {\n      height: 200,\n      width: 200,\n    },\n  }));\n\nconst ListItemCustom = ({ itemObject, index }) => {\n  const classes = useStyles();\n  return (\n    <Draggable draggableId={itemObject.id} key={itemObject.id} index={index}>\n      {(provided) => (\n        <ListItem\n          key={itemObject.id}\n          // role={undefined}\n          // dense\n          // button\n          ContainerComponent=\"li\"\n          ContainerProps={{ ref: provided.innerRef }}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {/* <ListItemText\n            styles={{ fontFamily: \"Quicksand\" }}\n            primary={`${itemObject.name}`}\n          /> */}\n          <Card className={classes.root} style={{display: 'inline-block'}}>\n            {/* <CardHeader title={`${itemObject.name}`} /> */}\n            <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {itemObject.name}\n                    </Typography>\n                </CardContent>\n            <CardMedia\n              className={classes.media}\n              image={`${itemObject.image}`}\n            />\n          </Card>\n         \n          <ListItemSecondaryAction>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"comments\"\n              question-uid={itemObject.id}\n            >\n              {/* <DeleteIcon /> */}\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      )}\n    </Draggable>\n  );\n};\n\nexport default ListItemCustom;\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport List from \"@material-ui/core/List\";\nimport ListItemCustom from \"./ListItemCustom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Column = ({ column }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: '#cfe8fc',\n        margin: 20,\n        padding: 20,\n        color: \"#3A728E\",\n        \n      }}\n    >\n      <Typography variant={\"h6\"}>{column.id}</Typography>\n      <Droppable droppableId={column.id}>\n        {(provided) => (\n          <RootRef rootRef={provided.innerRef}>\n            <List>\n              {column.list.map((itemObject, index) => {\n                // return <ListItemCustom index={index} itemObject={itemObject} key={itemObject.id}  />;\n                return <ListItemCustom index={index} itemObject={itemObject} key={itemObject.id}  />;\n              })}\n              {provided.placeholder}\n            </List>\n          </RootRef>\n        )}\n      </Droppable>\n    </div>\n  );\n};\n\nexport default Column;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n// import { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Column from \"./Column\";\n\nconst Assemble = () => {\n\n    let parts = JSON.parse(localStorage.getItem(\"selectedParts\") || \"[]\");\n    // console.log(\"In Assemble\", parts)\n    let selectedParts = []\n    parts.forEach(element => {\n        if(element.selected)\n        selectedParts.push(element);\n    });\n    // console.log('selectedParts',selectedParts)\n\n  const initialColumns = {\n    part: {\n      id: \"part\",\n      list: selectedParts,\n      name: \"Product Parts\"\n    },\n    combine: {\n      id: \"combine\",\n      name: \"To Assemble\",\n      list: [\n      ]\n    }\n  };\n\n  const [columns, setColumns] = useState(initialColumns);\n\n  const onDragEnd = ({ source, destination }) => {\n      // console.log('source, destination', source,destination)\n    if (destination === undefined || destination === null) return null;\n\n    if (\n      source.droppableId === destination.droppableId &&\n      destination.index === source.index\n    )\n      return null;\n\n    const start = columns[source.droppableId];\n    // console.log('start', start)\n    const end = columns[destination.droppableId];\n    // console.log('end', end)\n\n    if (start === end) {\n      // console.log(start);\n      const newList = start.list.filter((_, idx) => idx !== source.index);\n      // console.log('newList',newList)\n\n      newList.splice(destination.index, 0, start.list[source.index]);\n\n      const newCol = {\n        id: start.id,\n        list: newList\n      };\n\n      setColumns((state) => ({ ...state, [newCol.id]: newCol }));\n      return null;\n    } else {\n\n      const newStartList = start.list.filter((_, idx) => idx !== source.index);\n\n      const newStartCol = {\n        id: start.id,\n        list: newStartList\n      };\n\n      const newEndList = end.list;\n\n      newEndList.splice(destination.index, 0, start.list[source.index]);\n\n      const newEndCol = {\n        id: end.id,\n        list: newEndList\n      };\n\n\n      setColumns((state) => ({\n        ...state,\n        [newStartCol.id]: newStartCol,\n        [newEndCol.id]: newEndCol\n      }));\n      return null;\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Grid container direction={\"row\"} justify={\"center\"}>\n        {Object.values(columns).map((column) => {\n          // console.log(\"this is getting rendered\", column);\n          return (\n            <Grid item xs={6}>\n              <Column column={column} key={column.id} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </DragDropContext>\n  );\n};\n\nexport default Assemble;\n","import './App.css';\nimport HomePage from './components/HomePage';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n// import AssembleSteps from './components/AssembleSteps';\nimport SelectParts from './components/SelectParts';\nimport Assemble from './components/Assemble';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n     <Router>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path=\"/stepsToAssemble\" render={props => <SelectParts />} />\n          <Route path=\"/assemble\" render={props => <Assemble />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}